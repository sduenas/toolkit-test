# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Poetry
      run: |
        curl -O -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
        python get-poetry.py -y --preview
        echo "::set-env name=PATH::$HOME/.poetry/bin:$PATH"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install keyring
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build package
      run: |
        poetry build

    - name: Publish package
      env:
        TESTPYPI_TOKEN: ${{ secrets.TESTPYPI_KEY }}
      run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry config pypi-token.testpypi "$TESTPYPI_KEY"
        poetry publish -vvv -r testpypi
        
