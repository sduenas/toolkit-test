# This workflow will install Python dependencies, build a package
# and run tests. If the tests are successful the new package
# will be uploaded to PyPI.

name: Publish Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Python ${{ matrix.python-version }} dependencies
      run: |
        pip install --upgrade pip
        pip install wheel
    - name: Setup Poetry ${{ matrix.python-version }}
      run: |
        curl -O -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
        python get-poetry.py -y --preview
        echo "::set-env name=PATH::$HOME/.poetry/bin:$PATH"      
    - name: Build package
      run: |
        poetry build
    - name: Test package
      run: |
        pip3 install --pre --find-links ./dist/ *.whl
        cd tests && python run_tests.py
    - name: Publish package
      env:
        TESTPYPI_KEY: ${{ secrets.TESTPYPI_KEY }}
      run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry config pypi-token.testpypi "$TESTPYPI_KEY"
        poetry publish -n -vvv -r testpypi
